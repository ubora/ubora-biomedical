<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="n" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="q1" xml:space="preserve">
    <value>NON-INVASIVE</value>
  </data>
  <data name="q2" xml:space="preserve">
    <value>INVASIVE</value>
  </data>
  <data name="q2_1" xml:space="preserve">
    <value>NON-SURGICALLY INVASIVE (this means that it enters in the human body but only through a body orifice and without piercing or cutting the skin or membranes)?</value>
  </data>
  <data name="q2_1_1_1" xml:space="preserve">
    <value>Is it intended for transient use?</value>
  </data>
  <data name="q2_1_1_2" xml:space="preserve">
    <value>Is it intended for short-term use  only in the oral cavity as far as the pharynx, in an ear canal up to the ear drum or in the nasal cavity?</value>
  </data>
  <data name="q2_1_1_3" xml:space="preserve">
    <value>Is it intended for short-term use in any other site than the oral cavity as far as the pharynx, in an ear canal up to the ear drum or in the nasal cavity?</value>
  </data>
  <data name="q2_1_1_4" xml:space="preserve">
    <value>Is it intended for long-term use only in the oral cavity as far as the pharynx, in an ear canal up to the ear drum or in the nasal cavity and it not liable to be absorbed by the mucous membrane?</value>
  </data>
  <data name="q2_1_1_5" xml:space="preserve">
    <value>Is it intended for long-term use only in the oral cavity as far as the pharynx, in an ear canal up to the ear drum or in the nasal cavity but it is liable to be absorbed by the mucous membrane?</value>
  </data>
  <data name="q2_1_1_6" xml:space="preserve">
    <value>Is it intended for long-term use in any other site than the oral cavity as far as the pharynx, in an ear canal up to the ear drum or in the nasal cavity?</value>
  </data>
  <data name="q2_1_2" xml:space="preserve">
    <value>Class I active medical device</value>
  </data>
  <data name="q2_1_3" xml:space="preserve">
    <value>Class IIa or higher class active medical device</value>
  </data>
  <data name="q2_2" xml:space="preserve">
    <value>SURGICALLY INVASIVE</value>
  </data>
  <data name="q2_2_1" xml:space="preserve">
    <value>Is it for TRANSIENT use?</value>
  </data>
  <data name="q2_2_2" xml:space="preserve">
    <value>Is it for SHORT TERM use?</value>
  </data>
  <data name="q2_2_2_5_1" xml:space="preserve">
    <value>Is it in the teeth?</value>
  </data>
  <data name="q2_2_2_5_2" xml:space="preserve">
    <value>Is it in any part of the body other than the teeth?</value>
  </data>
  <data name="q2_2_3" xml:space="preserve">
    <value>Is it implantable or LONG TERM use?</value>
  </data>
  <data name="q2_2_3_4_1" xml:space="preserve">
    <value>In the teeth</value>
  </data>
  <data name="q2_2_3_4_2" xml:space="preserve">
    <value>In any part of the body other than the teeth</value>
  </data>
  <data name="q3_1_1" xml:space="preserve">
    <value>Does it administer energy to or exchange energy with the human body in a potentially hazardous way (consider nature of energy, density of energy, site of the body)?</value>
  </data>
  <data name="q3_1_2" xml:space="preserve">
    <value>Does it administer energy to or exchange energy with the human body in a NON-hazardous way?</value>
  </data>
  <data name="q3_5_1_1" xml:space="preserve">
    <value>Does such decision have an impact that may cause death or an irreversible deterioration of a person's state of health?</value>
  </data>
  <data name="q3_5_1_2" xml:space="preserve">
    <value>Does such decision have an impact that may cause a serious deterioration of a person's state of health or a surgical intervention?</value>
  </data>
  <data name="q3_5_2_1" xml:space="preserve">
    <value>Does it monitor vital physiological parameters, where the nature of variations of those parameters is such that it could result in immediate danger to the patient?</value>
  </data>
  <data name="q3_5_2_2" xml:space="preserve">
    <value>Does it monitor non-vital physiological parameters, so that the nature of variations of those parameters is such that it could never and in no cases result in immediate danger to the patient?</value>
  </data>
  <data name="q9_1" xml:space="preserve">
    <value>High or medium</value>
  </data>
  <data name="q9_2" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="q9_3" xml:space="preserve">
    <value>Negliglible</value>
  </data>
  <data name="y" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>