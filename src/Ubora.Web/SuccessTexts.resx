<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicableRegulationsQuestionnaireRetaken" xml:space="preserve">
    <value>Questionnaire was retaken.</value>
  </data>
  <data name="ApplicableRegulationsQuestionnaireStarted" xml:space="preserve">
    <value />
  </data>
  <data name="ApplicableRegulationsQuestionnaireStopped" xml:space="preserve">
    <value>Questionnaire was stopped.</value>
  </data>
  <data name="AssignmentAdded" xml:space="preserve">
    <value>Assignment added successfully!</value>
  </data>
  <data name="AssignmentEdited" xml:space="preserve">
    <value>Assignment edited.</value>
  </data>
  <data name="CandidateAdded" xml:space="preserve">
    <value>Candidate added successfully!</value>
  </data>
  <data name="CandidateCommentAdded" xml:space="preserve">
    <value>Comment added successfully!</value>
  </data>
  <data name="CandidateCommentEdited" xml:space="preserve">
    <value>Comment edited.</value>
  </data>
  <data name="CandidateCommentRemoved" xml:space="preserve">
    <value>Comment removed successfully!</value>
  </data>
  <data name="CandidateEdited" xml:space="preserve">
    <value>Candidate edited.</value>
  </data>
  <data name="CandidateImageDeleted" xml:space="preserve">
    <value>Image deleted successfully!</value>
  </data>
  <data name="CandidateImageUploaded" xml:space="preserve">
    <value>Image uploaded successfully!</value>
  </data>
  <data name="CandidateVoteAdded" xml:space="preserve">
    <value>Vote added successfully!</value>
  </data>
  <data name="DeviceClassificationRetaken" xml:space="preserve">
    <value>Questionnaire was retaken.</value>
  </data>
  <data name="DeviceClassificationStarted" xml:space="preserve">
    <value />
  </data>
  <data name="EmailConfirmed" xml:space="preserve">
    <value>Your email has been confirmed successfully!</value>
  </data>
  <data name="LeftFromProject" xml:space="preserve">
    <value />
  </data>
  <data name="PasswordChanged" xml:space="preserve">
    <value>Password changed successfully!</value>
  </data>
  <data name="ProfileEdited" xml:space="preserve">
    <value>Profile changed successfully!</value>
  </data>
  <data name="ProfilePictureUploaded" xml:space="preserve">
    <value>Profile image uploaded successfully!</value>
  </data>
  <data name="ProjectCreated" xml:space="preserve">
    <value>Project created successfully!</value>
  </data>
  <data name="ProjectDeleted" xml:space="preserve">
    <value>Project deleted successfully!</value>
  </data>
  <data name="ProjectImageDeleted" xml:space="preserve">
    <value>Project image deleted successfully!</value>
  </data>
  <data name="ProjectImageUploaded" xml:space="preserve">
    <value>Project image uploaded successfully!</value>
  </data>
  <data name="ProjectInvitationAccepted" xml:space="preserve">
    <value>Project invitation was accepted.</value>
  </data>
  <data name="ProjectInvitationDeclined" xml:space="preserve">
    <value>Project invitation was declined.</value>
  </data>
  <data name="ProjectMemberInvited" xml:space="preserve">
    <value>Project member invited.</value>
  </data>
  <data name="ProjectMemberRemoved" xml:space="preserve">
    <value>Project member removed successfully!</value>
  </data>
  <data name="ProjectMentorInvitationAccepted" xml:space="preserve">
    <value>Project mentor invitation was accepted.</value>
  </data>
  <data name="ProjectMentorInvitationDeclined" xml:space="preserve">
    <value>Project mentor invitation was declined.</value>
  </data>
  <data name="ProjectMentorInvited" xml:space="preserve">
    <value>Mentor successfully invited.</value>
  </data>
  <data name="ProjectTitleAndDescriptionUpdated" xml:space="preserve">
    <value>Project title and description updated.</value>
  </data>
  <data name="ProjectUpdated" xml:space="preserve">
    <value>Project overview changed successfully!</value>
    <comment>TODO: Imelik koht.</comment>
  </data>
  <data name="RepositoryFileAdded" xml:space="preserve">
    <value>File added successfully!</value>
  </data>
  <data name="RepositoryFileHidden" xml:space="preserve">
    <value />
  </data>
  <data name="RepositoryFileUpdated" xml:space="preserve">
    <value>File updated.</value>
  </data>
  <data name="RequestToJoinProjectAccepted" xml:space="preserve">
    <value>Request to join project accepted.</value>
  </data>
  <data name="RequestToJoinProjectDeclined" xml:space="preserve">
    <value>Request to join project declined.</value>
  </data>
  <data name="RequestToJoinProjectSent" xml:space="preserve">
    <value>Request sent successfully!</value>
  </data>
  <data name="UserDeleted" xml:space="preserve">
    <value>User deleted successfully!</value>
  </data>
  <data name="WP1Reopened" xml:space="preserve">
    <value>Successfully reopened!</value>
  </data>
  <data name="WP1ReviewAccepted" xml:space="preserve">
    <value>Work package 1 step accepted.</value>
  </data>
  <data name="WP1ReviewRejected" xml:space="preserve">
    <value>Work package 1 step rejected</value>
  </data>
  <data name="WP1StepEdited" xml:space="preserve">
    <value>Work package 1 step edited.</value>
  </data>
  <data name="WP1SubmittedForReview" xml:space="preserve">
    <value>Work package 1 submitted successfully!</value>
  </data>
  <data name="WP2StepEdited" xml:space="preserve">
    <value>Work package 2 step edited.</value>
  </data>
  <data name="WP3HealthTechnologySpecificationsEdited" xml:space="preserve">
    <value>Health technology specifications edited.</value>
  </data>
  <data name="WP3Opened" xml:space="preserve">
    <value>Work package 3 opened successfully!</value>
  </data>
  <data name="WP3StepEdited" xml:space="preserve">
    <value>Work package 3 step edited.</value>
  </data>
  <data name="WP3UserAndEnvironmentEdited" xml:space="preserve">
    <value>User and environment edited.</value>
  </data>
</root>