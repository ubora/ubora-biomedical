FROM mcr.microsoft.com/dotnet/core/sdk:2.1 AS build-env
WORKDIR /sln

# set up node
ENV NODE_VERSION 8.9.4
ENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc

RUN curl -SL "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz" --output nodejs.tar.gz \
    && echo "$NODE_DOWNLOAD_SHA nodejs.tar.gz" | sha256sum -c - \
    && tar -xzf "nodejs.tar.gz" -C /usr/local --strip-components=1 \
    && rm nodejs.tar.gz \
    && ln -s /usr/local/bin/node /usr/local/bin/nodejs


# Copy csproj and restore as distinct layers
COPY ./Ubora.Web/Ubora.Web.csproj ./Ubora.Web/Ubora.Web.csproj
COPY ./Ubora.Domain/Ubora.Domain.csproj ./Ubora.Domain/Ubora.Domain.csproj
COPY ./Ubora.Domain.Tests/Ubora.Domain.Tests.csproj ./Ubora.Domain.Tests/Ubora.Domain.Tests.csproj
COPY ./Ubora.Web.Tests/Ubora.Web.Tests.csproj ./Ubora.Web.Tests/Ubora.Web.Tests.csproj
COPY ./Ubora.ConsoleApp/Ubora.ConsoleApp.csproj ./Ubora.ConsoleApp/Ubora.ConsoleApp.csproj
COPY ./Ubora.MarkdownToQuillDeltaMigrator/Ubora.MarkdownToQuillDeltaMigrator.csproj ./Ubora.MarkdownToQuillDeltaMigrator/Ubora.MarkdownToQuillDeltaMigrator.csproj
Copy *.sln ./

RUN dotnet restore

# Copy everything else and build
COPY . ./
RUN dotnet publish "./Ubora.Web/Ubora.Web.csproj" -c Release -o "../dist"

# Build runtime image
FROM microsoft/dotnet:2.1.1-aspnetcore-runtime
WORKDIR /app
COPY --from=build-env /sln/dist .

# set up node
ENV NODE_VERSION 8.9.4
ENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc

RUN curl -SL "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz" --output nodejs.tar.gz \
    && echo "$NODE_DOWNLOAD_SHA nodejs.tar.gz" | sha256sum -c - \
    && tar -xzf "nodejs.tar.gz" -C /usr/local --strip-components=1 \
    && rm nodejs.tar.gz \
    && ln -s /usr/local/bin/node /usr/local/bin/nodejs \
    && npm install

EXPOSE 80
ENTRYPOINT ["dotnet", "Ubora.Web.dll"]