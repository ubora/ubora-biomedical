@using Ubora.Web._Features.ProjectList.Models
@using Ubora.Web._Features.ProjectList
@model Ubora.Web._Features.ProjectList.Models.SearchViewModel
@using Ubora.Web.Data
@using Ubora.Web._Features._Shared

@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Biomedical device projects";
}

<div class="container-fluid">
    <div class="row">


        <div class="col-xl-2 col-lg-3 py-3 pb-4 border-right h-min-lg-100-footer">
            @if (Model.Tab == TabType.AllProjects)
            {
                <form id="filters" asp-controller="ProjectList" asp-action="Search" method="get">
                    <input asp-for="Tab" type="hidden" />
                    <input asp-for="SortBy" type="hidden" />

                    <div class="form-group search mb-5">
                        <input class="form-control" asp-for="Title" placeholder="Search projects..." aria-describedby="btnGroupAddon">
                        <span asp-validation-for="Title"></span>
                    </div>

                    <button class="btn btn-icon px-0 w-100" type="button" data-toggle="collapse" data-target="#collapseArea" aria-expanded="false" aria-controls="collapseArea">
                        <div class="d-flex justify-content-between">
                            <span>Area</span>
                            <i class="material-icons">keyboard_arrow_down</i>
                        </div>
                    </button>

                    <div class="collapse @(Model.ByArea.Any() ? "show" : "")" id="collapseArea">
                        <div class="filter-group">
                            @{
                                var index = 0;

                                <span class="color-grey font-size-0-8">Surgery</span>
                                foreach (var area in Tags.SurgicalFieldAreas)
                                {
                                    var id = nameof(Model.ByArea) + index;
                                    <div class="custom-control custom-checkbox mx-1 my-1">
                                        <input type="checkbox" class="custom-control-input" id="@id" name="@nameof(SearchModel.ByArea)" value="@index" checked="@Model.ByArea.Contains(index)" />
                                        <label class="custom-control-label" for="@id">@area</label>
                                    </div>
                                    index++;
                                }

                                <span class="color-grey font-size-0-8">Internal Medicine</span>
                                foreach (var area in Tags.InternalMedicineAreas)
                                {
                                    var id = nameof(Model.ByArea) + index;
                                    <div class="custom-control custom-checkbox mx-1 my-1">
                                        <input type="checkbox" class="custom-control-input" id="@id" name="@nameof(SearchModel.ByArea)" value="@index" checked="@Model.ByArea.Contains(index)" />
                                        <label class="custom-control-label" for="@id">@area</label>
                                    </div>
                                    index++;
                                }

                                <span class="color-grey font-size-0-8">Diagnostic medicine</span>
                                foreach (var area in Tags.DiagnosticMedicineAreas)
                                {
                                    var id = nameof(Model.ByArea) + index;
                                    <div class="custom-control custom-checkbox mx-1 my-1">
                                        <input type="checkbox" class="custom-control-input" id="@id" name="@nameof(SearchModel.ByArea)" value="@index" checked="@Model.ByArea.Contains(index)" />
                                        <label class="custom-control-label" for="@id">@area</label>
                                    </div>
                                    index++;
                                }

                                <span class="color-grey font-size-0-8">Other major disciplines</span>
                                foreach (var area in Tags.OtherMajorDisciplineAreas)
                                {
                                    var id = nameof(Model.ByArea) + index;
                                    <div class="custom-control custom-checkbox mx-1 my-1">
                                        <input type="checkbox" class="custom-control-input" id="@id" name="@nameof(SearchModel.ByArea)" value="@index" checked="@Model.ByArea.Contains(index)" />
                                        <label class="custom-control-label" for="@id">@area</label>
                                    </div>
                                    index++;
                                }
                            }

                        </div>
                    </div>
                    <hr />
                    <button class="btn btn-icon px-0 w-100" type="button" data-toggle="collapse" data-target="#collapseClinicalNeeds" aria-expanded="false" aria-controls="collapseClinicalNeeds">
                        <div class="d-flex justify-content-between">
                            <span>Clinical needs</span>
                            <i class="material-icons">keyboard_arrow_down</i>
                        </div>
                    </button>
                    <div class="collapse @(@Model.ByClinicalNeedTags.Any() ? "show" : "")" id="collapseClinicalNeeds">
                        <div class="filter-group">
                            @{
                                for (int i = 0; i < Tags.ClinicalNeeds.Count; i++)
                                {
                                    var id = nameof(Model.ByClinicalNeedTags) + i;
                                    <div class="custom-control custom-checkbox mx-1 my-1">
                                        <input type="checkbox" class="custom-control-input" id="@id" name="@nameof(SearchModel.ByClinicalNeedTags)" value="@i" checked="@Model.ByClinicalNeedTags.Contains(i)" />
                                        <label class="custom-control-label" for="@id">@Tags.ClinicalNeeds[i]</label>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <hr />
                    <button class="btn btn-icon px-0 w-100" type="button" data-toggle="collapse" data-target="#collapseTechnology" aria-expanded="false" aria-controls="collapseTechnology">
                        <div class="d-flex justify-content-between">
                            <span>Technology</span>
                            <i class="material-icons">keyboard_arrow_down</i>
                        </div>
                    </button>
                    <div class="collapse @(Model.ByPotentialTechnologyTags.Any() ? "show" : "")" id="collapseTechnology">
                        <div class="filter-group">
                            @{
                                for (int i = 0; i < Tags.PotentialTechnologies.Count; i++)
                                {
                                    var id = nameof(Model.ByPotentialTechnologyTags) + i;
                                    <div class="custom-control custom-checkbox mx-1 my-1">
                                        <input type="checkbox" class="custom-control-input" id="@id" name="@nameof(SearchModel.ByPotentialTechnologyTags)" value="@i" checked="@Model.ByPotentialTechnologyTags.Contains(i)" />
                                        <label class="custom-control-label" for="@id">@Tags.PotentialTechnologies[i]</label>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <hr />
                    <span>Status</span>
                    @{
                        <div class="custom-control custom-radio mx-1 my-1">
                            <input id="statusAll" type="radio" asp-for="ByStatus" class="custom-control-input" value="@ByStatusFilteringMethod.All" />
                            <label for="statusAll" class="custom-control-label">All</label>
                        </div>

                        <div class="custom-control custom-radio mx-1 my-1">
                            <input id="statusDraft" type="radio" asp-for="ByStatus" class="custom-control-input" value="@ByStatusFilteringMethod.Draft" />
                            <label for="statusDraft" class="custom-control-label">Draft</label>
                        </div>

                        <div class="custom-control custom-radio mx-1 my-1">
                            <input id="statusApproved" type="radio" asp-for="ByStatus" class="custom-control-input" value="@ByStatusFilteringMethod.NotDraft" />
                            <label for="statusApproved" class="custom-control-label">Approved</label>
                        </div>
                    }
                </form>
            }
        </div>

        <div class="col-xl-8 col-lg-9 px-xl-7 py-3">
            <h1>@ViewData["Title"]</h1>
            <ul class="nav nav-tabs" id="projectsTab">
                @if (SignInManager.IsSignedIn(User))
                {
                    <li class="nav-item">
                        <a class="nav-link d-flex align-items-center @(Model.Tab == TabType.MyProjects ? "active" : "")" id="my-projects-tab" asp-route-tab="@TabType.MyProjects">
                            My projects
                        </a>
                    </li>
                }
                <li class="nav-item">
                    <a class="nav-link d-flex align-items-center @(Model.Tab == TabType.AllProjects ? "active" : "")" id="all-projects-tab" asp-route-tab="@TabType.AllProjects">
                        All projects
                    </a>
                </li>

                <li class="ml-sm-auto d-xs-block">
                    <a class="btn btn-sm btn-outline-primary d-xs-block my-xs-2" asp-controller="ProjectCreation" asp-action="Create" role="button">
                        <i class="material-icons">add</i>
                        <span>
                            Create project
                        </span>
                    </a>
                </li>

            </ul>

            <div class="tab-content" id="projectsTabContent">
                @if (SignInManager.IsSignedIn(User) && Model.Tab == TabType.MyProjects)
                {
                    <div class="tab-pane fade show active" id="myProjects">
                        <div class="my-4">
                            @await Component.InvokeAsync(typeof(MyProjectListViewComponent))
                        </div>
                    </div>

                    <div class="tab-pane fade" id="allProjects">
                    </div>
                }
                else
                {
                    @await Html.PartialAsync("AllProjectsTabPartial.cshtml", Model)
                }
            </div>

        </div>
        <div class="col-xl-2 py-3"></div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-throttle-debounce/1.1/jquery.ba-throttle-debounce.min.js"></script>
    <script src="~/dist/infinite_scroll.bundle.js"></script>
    @if (Model.Tab == TabType.AllProjects)
    {
        <script>UBORA.initInfiniteScroll(window.location.href);</script>
    }
    <script>
        function applyFilters() {
            $.ajax('/projects/search', {
                method: 'get',
                data: compress($('#filters').serialize()),
                success: function (response) {
                    history.replaceState({}, '', this.url); // https://developer.mozilla.org/en-US/docs/Web/API/History_API
                    var responseHtml = $(response).find('.tab-content').html();
                    $('.tab-content').html(responseHtml);
                    UBORA.initInfiniteScroll(window.location.href);
                }
            });
        }
        
        //Multiple parameters to a comma-separated - https://stackoverflow.com/questions/2019608/pass-entire-form-as-data-in-jquery-ajax-function/2020193#2020193
        function compress(data) {
            data = data.replace(/([^&=]+=)([^&]*)(.*?)&\1([^&]*)/g, "$1$2,$4$3");
            return /([^&=]+=).*?&\1/.test(data) ? compress(data) : data;
        }

        $('#filters :input').change($.debounce(250, function () {
            applyFilters();
        }));

        var $title = $('#Title');
        $title.unbind();
        $title.on('input', $.debounce(250, function () {
            applyFilters();
        }));
    </script>
}