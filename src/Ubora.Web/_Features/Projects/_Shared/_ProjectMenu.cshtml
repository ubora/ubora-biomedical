@using Microsoft.AspNetCore.Authorization
@using Ubora.Web._Features.Projects._Shared

@model Ubora.Web._Features.Projects._Shared.ProjectMenuViewModel

@functions
{
string GetActivityCssClass(ProjectMenuOption menuOption)
{
    if (menuOption == Model.ActiveMenuOption)
    {
        return "active";
    }
    return "";
}
}

@{
    var canViewProjectNonPublicContent = await AuthorizationService.IsAuthorizedAsync(User, Policies.CanViewProjectNonPublicContent);
    var canViewProjectHistory = await AuthorizationService.IsAuthorizedAsync(User, Policies.CanViewProjectHistory);
    var canViewProjectRepository = await AuthorizationService.IsAuthorizedAsync(User, Policies.CanViewProjectRepository);
}

<div class="project-header-container d-none d-lg-block">
    <div class="container pl-0">
        <h1 class="my-3 pl-3">
            @ViewData["ProjectTitle"]
            @if ((bool)ViewData["ProjectIsDraft"])
            {
                <span class="badge badge-pill badge-orange font-size-1 ml-2">Draft</span>
            }
        </h1>
        <nav class="project-header nav nav-tabs flex-column flex-md-row justify-content-start">
            <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Overview)" asp-controller="Dashboard" asp-action="Dashboard">@Model.MenuOptionNames[ProjectMenuOption.Overview]</a>

            @if (canViewProjectNonPublicContent)
            {
                <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Workpackages)" asp-controller="WorkpackageOne" asp-action="ProjectOverview">@Model.MenuOptionNames[ProjectMenuOption.Workpackages]</a>
            }

            @if (canViewProjectRepository)
            {
                <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Repository)" asp-controller="Repository" asp-action="Repository">@Model.MenuOptionNames[ProjectMenuOption.Repository]</a>
            }

            @if (canViewProjectNonPublicContent)
            {
                <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Assignments)" asp-controller="Assignments" asp-action="Assignments">@Model.MenuOptionNames[ProjectMenuOption.Assignments]</a>
            }
            <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Members)" asp-controller="Members" asp-action="Members">@Model.MenuOptionNames[ProjectMenuOption.Members]</a>

            @if (canViewProjectHistory)
            {
                <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.History)" asp-controller="History" asp-action="History">@Model.MenuOptionNames[ProjectMenuOption.History]</a>
            }
        </nav>
    </div>
</div>


<div class="project-header-md d-md-block d-lg-none">
    <h1 class="text-center mb-0 my-2">@ViewData["ProjectTitle"]</h1>
    <div class="dropdown">
        <button class="btn btn-primary btn-block dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            @Model.MenuOptionNames[Model.ActiveMenuOption]
        </button>
        <div class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton" id="projectNavMobile">
            <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Overview)" asp-controller="Dashboard" asp-action="Dashboard">@Model.MenuOptionNames[ProjectMenuOption.Overview]</a>
            @if (canViewProjectNonPublicContent)
            {
                <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Workpackages)" asp-controller="WorkpackageOne" asp-action="ProjectOverview">@Model.MenuOptionNames[ProjectMenuOption.Workpackages]</a>
                <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Repository)" asp-controller="Repository" asp-action="Repository">@Model.MenuOptionNames[ProjectMenuOption.Repository]</a>
                <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Assignments)" asp-controller="Assignments" asp-action="Assignments">@Model.MenuOptionNames[ProjectMenuOption.Assignments]</a>
            }
            <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Members)" asp-controller="Members" asp-action="Members">@Model.MenuOptionNames[ProjectMenuOption.Members]</a>
            @if (canViewProjectNonPublicContent)
            {
                <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.History)" asp-controller="History" asp-action="History">@Model.MenuOptionNames[ProjectMenuOption.History]</a>
            }
        </div>
    </div>
</div>