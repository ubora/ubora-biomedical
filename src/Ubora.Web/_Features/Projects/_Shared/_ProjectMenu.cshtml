@using Microsoft.AspNetCore.Authorization
@using Ubora.Web._Features.Projects._Shared

@model Ubora.Web._Features.Projects._Shared.ProjectMenuViewModel

@functions
{
    string GetActivityCssClass(ProjectMenuOption menuOption)
    {
        if (menuOption == Model.ActiveMenuOption)
        {
            return "active";
        }
        return "";
    }
}

@{
    var canViewProjectNonPublicContent = await AuthorizationService.IsAuthorizedAsync(User, Policies.CanViewProjectNonPublicContent);
}

<div class="project-header-container">
    <div class="container">
        <nav class="project-header nav nav-tabs flex-column flex-md-row justify-content-start">
            <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Overview)" asp-controller="Dashboard" asp-action="Dashboard">@Model.MenuOptionNames[ProjectMenuOption.Overview]</a>
            @if (canViewProjectNonPublicContent)
            {
                <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Workpackages)" asp-controller="WorkpackageOne" asp-action="ProjectOverview">@Model.MenuOptionNames[ProjectMenuOption.Workpackages]</a>
                <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Repository)" asp-controller="Repository" asp-action="Repository">@Model.MenuOptionNames[ProjectMenuOption.Repository]</a>
                <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Assignments)" asp-controller="Assignments" asp-action="Assignments">@Model.MenuOptionNames[ProjectMenuOption.Assignments]</a>
            }
            <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Members)" asp-controller="Members" asp-action="Members">@Model.MenuOptionNames[ProjectMenuOption.Members]</a>
            @if (canViewProjectNonPublicContent)
            {
                <a class="nav-item nav-link @GetActivityCssClass(ProjectMenuOption.History)" asp-controller="History" asp-action="History">@Model.MenuOptionNames[ProjectMenuOption.History]</a>
            }
        </nav>
    </div>
</div>


<div class="project-header-md dropdown">
    <button class="btn btn-primary btn-block dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        @Model.MenuOptionNames[Model.ActiveMenuOption]
    </button>
    <div class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton" id="projectNavMobile">
        <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Overview)" asp-controller="Dashboard" asp-action="Dashboard">@Model.MenuOptionNames[ProjectMenuOption.Overview]</a>
        @if (canViewProjectNonPublicContent)
        {
            <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Workpackages)" asp-controller="WorkpackageOne" asp-action="ProjectOverview">@Model.MenuOptionNames[ProjectMenuOption.Workpackages]</a>
            <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Repository)" asp-controller="Repository" asp-action="Repository">@Model.MenuOptionNames[ProjectMenuOption.Repository]</a>
            <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Assignments)" asp-controller="Assignments" asp-action="Assignments">@Model.MenuOptionNames[ProjectMenuOption.Assignments]</a>
        }
        <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.Members)" asp-controller="Members" asp-action="Members">@Model.MenuOptionNames[ProjectMenuOption.Members]</a>
        @if (canViewProjectNonPublicContent)
        {
            <a class="dropdown-item nav-item nav-link @GetActivityCssClass(ProjectMenuOption.History)" asp-controller="History" asp-action="History">@Model.MenuOptionNames[ProjectMenuOption.History]</a>
        }
    </div>
</div>