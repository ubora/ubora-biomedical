@using Ubora.Web.Data
@using Ubora.Web._Features.Projects._Shared
@model Ubora.Web._Features.Projects.Assignments.AssignmentListViewModel

@inject UserManager<ApplicationUser> UserManager

@{
    ViewData[nameof(PageTitle)] = "Assignments";
    ViewData[nameof(ProjectMenuOption)] = ProjectMenuOption.Assignments;
}

<div class="row">
    <div class="col-sm-8 col-12">
        <h1>@ViewData[nameof(PageTitle)]</h1>
    </div>
    <div class="col-sm-4 col-12 header-actions">
        <a class="btn" asp-controller="Assignments" asp-action="Add" asp-route-projectId="@Model.ProjectId">
            <i class="material-icons">add</i>
            <span>Add assignment</span>
        </a>
    </div>
</div>
<div class="row my-4">
    <div class="col">
        <ol>
            @if (await AuthorizationService.IsAuthorizedAsync(User, Policies.CanEditAssignment))
            {
                @foreach (var assignment in Model.Assignments)
                {
                    <li>
                        <a asp-controller="Assignments" asp-action="Edit" asp-route-id="@assignment.Id">@assignment.Title</a>
                    </li>
                }
            }
            else
            {
                @foreach (var assignment in Model.Assignments)
                {
                    @if (assignment.CreatedByUserId == UserManager.GetUserAsync(User).Result.Id)
                    {
                        <li>
                            <a asp-controller="Assignments" asp-action="Edit" asp-route-id="@assignment.Id">@assignment.Title</a>
                        </li>
                    }
                    else
                    {
                        <li>
                            <a asp-controller="Assignments" asp-action="View" asp-route-id="@assignment.Id">@assignment.Title</a>
                        </li>
                    }
                }
            }
        </ol>
    </div>
</div>