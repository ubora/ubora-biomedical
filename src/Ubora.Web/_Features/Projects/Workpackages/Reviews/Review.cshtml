@using Ubora.Web._Features.Projects.Workpackages
@using Ubora.Web._Features.Projects._Shared
@model Ubora.Web._Features.Projects.Workpackages.Reviews.WorkpackageReviewListViewModel

@{
    ViewData["Title"] = "Formal review";
    ViewData["MenuOption"] = ProjectMenuOption.Workpackages;
}

<section class="project-view full-width">
    @await Component.InvokeAsync(typeof(WorkpackageListOverviewViewComponent))

    <section class="medium-width step-view">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        @if (Model.SubmitForReviewButton.IsVisible)
        {
            <section class="medium-width">
                <form action="@Model.SubmitForReviewUrl" method="post" asp-antiforgery="true">
                    <div class="form-input formal-review-form">
                        <div class="center-element">
                            <h1 class="formal-review-heading">You can submit your project for review.</h1>
                        </div>
                        <button type="submit" class="button primary-button small-button">Submit project for review</button>
                    </div>
                </form>
            </section>
        }
        else if (Model.SubmitForReviewButton.IsHiddenWithMessage)
        {
            <section class="full-width">
                <p><i>@Model.SubmitForReviewButton.HideReasonMessage</i></p>
            </section>
        }

        @if (Model.Reviews.Any())
        {


            <section class="full-width">
                <h2>Reviews</h2>
                @foreach (var review in Model.Reviews)
                {
                    <table class="review-table">
                        <tr>
                            <td><b>Status</b></td>
                            <td>@review.Status.ToString()</td>
                        </tr>
                        <tr>
                            <td><b>Concluding comment</b></td>
                            <td>@review.ConcludingComment</td>
                        </tr>
                        <tr>
                            <td><b>Created at</b></td>
                            <td><time class="timeago" datetime="@review.SubmittedAt">@review.SubmittedAt</time></td>
                        </tr>
                        <tr>
                            <td><b>Concluded at</b></td>
                            <td><time class="timeago" datetime="@review.ConcludedAt">@review.ConcludedAt</time></td>
                        </tr>
                    </table>
                    <br>
                }

                @{

                    var isWriteReviewButtonVisible = (await AuthorizationService.AuthorizeAsync(User, Policies.CanReviewProjectWorkpackages)).Succeeded;
                    if (isWriteReviewButtonVisible)
                    {
                        <a href="@Model.ReviewDecisionUrl" class="button primary-button small-button">Write a review</a>
                    }
                }
            </section>
        }
    </section>
</section>