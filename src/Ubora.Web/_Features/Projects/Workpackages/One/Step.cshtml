@using Ubora.Web._Features.Projects.Workpackages
@using Ubora.Web._Features.Projects._Shared
@model Ubora.Web._Features.Projects.Workpackages.One.EditWorkpackageOneStepViewModel

@{
    ViewData["Title"] = "Workpackages";
    ViewData["MenuOption"] = ProjectMenuOption.Workpackages;
}

<section class="project_view full-width">
    @await Component.InvokeAsync(typeof(WorkpackagesOverviewViewComponent))

    <section class="medium-width step-view">

        @if (Model.IsEdit)
        {
            <h1 class="full-width">@Model.Title</h1>
            <form action="@Url.Action(Model.ActionName, Model.ControllerName)" method="post">
                @*Post to preserve view info on post-back.*@
                <input asp-for="Title" type="hidden" />
                <input asp-for="ActionName" type="hidden" />
                <input asp-for="IsEdit" type="hidden" />

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <label>
                    <textarea class="content_editable" asp-for="Value" rows="8"></textarea>
                    <span asp-validation-for="Value"></span>
                </label>

                <div class="center-element">
                    <a class="button secondary-button small-button" href="@Url.Action(Model.ActionName, Model.ControllerName, new { edit = false })">Discard</a>
                    <button class="button primary-button small-button" type="submit">Save changes</button>
                </div>

            </form>
        }
        else
        {
            <div class="step_header">
                <h1 class="step_title">@Model.Title</h1>
                <a class="step_edit" href="@Url.Action(Model.ActionName, Model.ControllerName, new { edit = true })"><i class="material-icons">mode_edit</i>&nbsp;Edit</a>
            </div>

            @*
                TODO:
                Add placeholders described by Alice (will be added this week).
                Some of these texts can be found in UBORA design competition document (second stage proposal).
            *@
<pre class="markdown-like">
@Model.Value
</pre>
        }
    </section>
</section>

<link rel="stylesheet" href="~/lib/simplemde/dist/simplemde.min.css">
<script type="text/javascript" src="~/lib/simplemde/dist/simplemde.min.js"></script>
<script>
    const simpleMde = new SimpleMDE({ element: document.querySelector(".content_editable") });
</script>
