@using Ubora.Web._Features.Projects.Workpackages
@model Ubora.Web._Features.Projects.Workpackages.Steps.CandidateViewModel

<div class="container-fluid my-4">
    <div class="row">

        <div class="col-sm-12 col-md-4">
            @await Component.InvokeAsync(typeof(WorkpackageListOverviewViewComponent))
        </div>

        <div class="col-sm-12 col-md-8">
            <div class="row">
                <div class="col">
                    <h1 class="display-4">Conceptual Design</h1>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12 col-md-6">
                    <div class="row">
                        <div class="col">
                            <div class="card w-100 h-100">
                                <img class="card-img-top img-fluid w-100" src="@Model.ImageUrl" alt="Illustrative project photo" />
                            </div>
                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col d-flex justify-content-end">
                            @if ((await AuthorizationService.AuthorizeAsync(User, null, Policies.CanChangeProjectCandidateImage)).Succeeded)
                            {
                                <a class="btn btn-secondary-ghost align-self-start" href="@Url.Action("EditCandidateImage", "ConceptualDesign", new { candidateId = Model.Id })">
                                    <i class="material-icons" id="EditImage">mode_edit</i>
                                    <span>Change image</span>
                                </a>
                            }

                            @if (Model.HasImage && (await AuthorizationService.AuthorizeAsync(User, null, Policies.CanRemoveProjectCandidateImage)).Succeeded)
                            {
                                <form method="post" asp-action="RemoveCandidateImage">

                                    <div class="form-group">
                                        <span class="mx-1"></span>
                                        <a class="btn btn-secondary-ghost align-self-start" href="@Url.Action("RemoveCandidateImage", "ConceptualDesign", new { candidateId = Model.Id })">
                                            <i class="material-icons">delete_forever</i>
                                            <span>Remove image</span>
                                        </a>
                                    </div>
                                </form>
                            }
                        </div>

                    </div>

                </div>
                <div class="col-sm-12 col-md-6">
                    <div class="row">
                        <div class="col-sm-12 col-md-9">
                            <h2>@Model.Title</h2>
                        </div>
                        <div class="col-sm-12 col-md-3 d-flex justify-content-end">
                            @if ((await AuthorizationService.AuthorizeAsync(User, null, Policies.CanEditProjectCandidate)).Succeeded)
                            {
                                <a class="btn btn-secondary-ghost align-self-start" href="@Url.Action("EditCandidate", "ConceptualDesign", new { candidateId = Model.Id })">
                                    <i class="material-icons" id="EditImage">mode_edit</i>
                                    <span>Edit</span>
                                </a>
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <p>@Model.Description</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
