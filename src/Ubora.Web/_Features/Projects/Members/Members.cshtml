@using Microsoft.AspNetCore.Html
@using Ubora.Web._Features.Projects._Shared
@using Ubora.Web._Features.Users.UserList
@model Ubora.Web._Features.Projects.Members.ProjectMemberListViewModel

@{
    ViewData["Title"] = "Members";
    ViewData["MenuOption"] = ProjectMenuOption.Members;
}

<div class="container my-4">
    <div class="row">
        <div class="col-lg-5">
            <h1>@ViewData["Title"]</h1>
        </div>
        <div class="col-lg-7 d-flex justify-content-end">
            @if (Model.IsProjectMember)
            {
                <a class="btn btn-outline-primary align-self-start d-sm-block d-lg-inline-block" asp-controller="Members" asp-action="Invite">
                    <i class="material-icons">person_add</i>
                    <span>Invite member</span>
                </a>
            }

            @if (await AuthorizationService.IsAuthorizedAsync(User, Policies.CanInviteMentors))
            {
                <a class="btn btn-outline-primary align-self-start d-sm-block d-lg-inline-block ml-1" asp-controller="InviteMentors" asp-action="InviteMentors">
                    <i class="material-icons" id="MentorInviteButton">person_add</i>
                    <span>Add mentor</span>
                </a>
            }

            @if (Model.IsProjectMember && !Model.IsProjectLeader)
            {
                <a class="btn btn-outline-primary align-self-start d-sm-block d-lg-inline-block ml-1" asp-controller="Members" asp-action="Leave" asp-route-memberId="Model.UserId">
                    <i class="material-icons">exit_to_app</i>
                    <span>Leave project</span>
                </a>
            }
        </div>
    </div>
    <div class="row">
        @{
            RazorDelegate createRemoveMentor =
                @<a title="Remove mentor" asp-controller="Members" asp-action="RemoveMentor" asp-route-memberId="@item.UserId" class="dropdown-item">
                    Remove mentor
                </a>;

            RazorDelegate createPromoteLeader = 
                @<a title="Promote to project leader" asp-controller="Members" asp-action="PromoteMember" asp-route-memberId="@item.UserId" class="dropdown-item">
                    Promote to project leader
                </a>;

            RazorDelegate createRemoveMember =
                @<a title="Remove member" asp-controller="Members" asp-action="RemoveMember" asp-route-memberId="@item.UserId" class="dropdown-item">
                    Remove member
                </a>;
        }

        @foreach (var member in Model.Members)
        {
            var contents = new List<IHtmlContent>();

            if (!member.IsCurrentUser)
            {
                if (await AuthorizationService.IsAuthorizedAsync(User, Policies.CanRemoveProjectMember))
                {
                    contents.Add(createRemoveMember(member));
                }

                if (await AuthorizationService.IsAuthorizedAsync(User, Policies.CanRemoveProjectMentor) && member.IsProjectMentor)
                {
                    contents.Add(createRemoveMentor(member));
                }
            }

            @if (await AuthorizationService.IsAuthorizedAsync(User, Policies.CanPromoteMember) && !member.IsProjectLeader)
            {
                contents.Add(createPromoteLeader(member));
            }

            Html.RenderPartial("~/_Components/UserCards/UserCard.cshtml", new UserCardViewModel(
              userId: member.UserId,
              name: member.FullName,
              roles: member.Roles,
              profilePictureUrl: member.ProfilePictureUrl,
              footerHtml: Html.Partial("~/_Features/Projects/Members/_DropDownPartial.cshtml", model: contents)
            )
          );
        }
    </div>
</div>