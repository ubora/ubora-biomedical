@using Ubora.Web._Features.Projects._Shared
@model Ubora.Web._Features.Projects.Members.InviteProjectMemberViewModel

@{
    ViewData["Title"] = "Members";
    ViewData["MenuOption"] = ProjectMenuOption.Members;
}

<section class="narrow-width">

    <form asp-controller="Members" asp-action="Invite" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <input asp-for="ProjectId" type="hidden"/>

        <div class="form-input">
            <label asp-for="Email">User's email address</label>
            <input asp-for="Email" placeholder="Email address" id="autocomplete" autofocus>
            <span asp-validation-for="Email"></span>
        </div>

        <div class="form-input">
            <button class="button primary-button full-width" type="submit">Invite member</button>
        </div>
    </form>
</section>

@section Scripts {
    <script>
    (() => {
        AutoComplete({
            Limit: 100,
            MinChars: 2,
            Url: "/Projects/@Model.ProjectId/Members/SearchUsers",
            QueryArg: "searchPhrase",
            EmptyMessage: "No results",
            _RenderResponseItems: function (response) {
                var ul = document.createElement("ul"),
                    li = document.createElement("li"),
                    limit = this._Limit();

                // Order
                if (limit < 0) {
                    response = response.reverse();
                } else if (limit === 0) {
                    limit = response.length;
                }

                for (var item = 0; item < Math.min(Math.abs(limit), response.length); item++) {
                    li.innerHTML = response[item].Label + ' - ' + response[item].Value;
                    li.setAttribute("data-autocomplete-value", response[item].Value);

                    ul.appendChild(li);
                    li = document.createElement("li");
                }

                return ul;
            },
        }, "#autocomplete");
    })();
    </script>
}
