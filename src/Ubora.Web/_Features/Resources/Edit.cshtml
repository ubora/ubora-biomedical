@using Ubora.Web._Features.Resources
@model Ubora.Web._Features.Resources.ResourceEditViewModel

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" asp-action="@nameof(ResourcesController.Read)" asp-route-id="@Model.ResourceId">
            Read
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" asp-action="@nameof(ResourcesController.Edit)" asp-route-id="@Model.ResourceId">
            Edit
        </a>
    </li>
    <li class="nav-item" >
        <a class="nav-link" asp-action="@nameof(ResourcesController.History)" asp-route-id="@Model.ResourceId">
            History
        </a>
    </li>
</ul>

<form asp-action="Edit">
    <h1>@Model.Title</h1>
    <input type="hidden" asp-for="ResourceId" />
    <input type="hidden" asp-for="ContentVersion" />
    <div class="form-group">
        
        <div id="toolbar-container">
            <span class="ql-formats">
                <select class="ql-font"></select>
                <select class="ql-size"></select>
            </span>
            <span class="ql-formats">
                <button class="ql-bold"></button>
                <button class="ql-italic"></button>
                <button class="ql-underline"></button>
                <button class="ql-strike"></button>
            </span>
            <span class="ql-formats">
                <select class="ql-color"></select>
                <select class="ql-background"></select>
            </span>
            <span class="ql-formats">
                <button class="ql-script" value="sub"></button>
                <button class="ql-script" value="super"></button>
            </span>
            <span class="ql-formats">
                <button class="ql-header" value="1"></button>
                <button class="ql-header" value="2"></button>
                <button class="ql-blockquote"></button>
                <button class="ql-code-block"></button>
            </span>
            <span class="ql-formats">
                <button class="ql-list" value="ordered"></button>
                <button class="ql-list" value="bullet"></button>
                <button class="ql-indent" value="-1"></button>
                <button class="ql-indent" value="+1"></button>
            </span>
            <span class="ql-formats">
                <button class="ql-direction" value="rtl"></button>
                <select class="ql-align"></select>
            </span>
            <span class="ql-formats">
                <button class="ql-link"></button>
                <button class="ql-image"></button>
                <button class="ql-video"></button>
            </span>
            <span class="ql-formats">
                <button class="ql-clean"></button>
            </span>
        </div>
        <div class="editor-container">
            @Html.Raw(Model.Body)
        </div>
    </div>
    <button id="publish_changes-button" type="submit" class="btn btn-primary float-right">Publish changes</button>
</form>

@section Right {
    ACTIONS:
    <button>Open repository</button>
}

@section Scripts {
    <script src="//cdn.quilljs.com/1.3.6/quill.js"></script>
    <link href="//cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
        $(function() {
            var quill = new Quill('.editor-container',
                {
                    modules: {
                        toolbar: '#toolbar-container'
                    },
                    placeholder: 'Compose an epic...',
                    theme: 'snow'
                });

            document.getElementById("publish_changes-button").addEventListener("click",
                function(event) {
                    event.preventDefault();

                    axios.post('@(Url.Action("Edit"))',
                        {
                            ResourceId: '@Model.ResourceId',
                            Body: quill.container.firstChild.innerHTML,
                            ContentVersion: '@Model.ContentVersion'
                        }).then(function(response) {
                        window.location.replace(`${window.top.location.origin}@(Url.Action("Read", new { id = Model.ResourceId }))`);
                    });
            });

//            $.ajax({
//                url: `${window.top.location.origin}/Feedback/Send`,
//                type: 'POST',
//                data: JSON.stringify(data),
//                contentType: 'application/json; charset=utf-8',
//                success: () => {
//                    createNotice('alert-success', 'Thank you for your feedback! 😃');
//                    return this._closeModal();
//                }
//            });

        $('publish_changes-button').click(function() {

            console.log('test');
            //            e.preventDefault();

        });
        });
    </script>
}