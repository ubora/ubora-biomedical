@model Ubora.Web._Features._Shared.Paging.Pager
    
@{
    var currentPage = Model.PageNumber;
    var totalPages = Model.PageCount;
    var startPage = currentPage - 5;
    var endPage = currentPage + 4;
    if (startPage <= 0)
    {
        endPage -= (startPage - 1);
        startPage = 1;
    }
    if (endPage > totalPages)
    {
        endPage = totalPages;
        if (endPage > 10)
        {
            startPage = endPage - 9;
        }
    }
    
}

<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" href="@GeneratePagedUrl(Model.PageNumber-1)" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        @for (int pageNumber = startPage; pageNumber <= endPage; pageNumber++)
        {
            <li class="page-item @(Model.PageNumber == pageNumber ? "active" : "")"><a class="page-link" href="@GeneratePagedUrl(pageNumber)">@pageNumber</a></li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" href="@GeneratePagedUrl(Model.PageNumber+1)" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>

@functions  {
    string GeneratePagedUrl(int pageNumber)
    {
        var request = ViewContext.HttpContext.Request;

        var hasPage = false;
        var queryParams = request.Query.Select(x =>
        {
            if (x.Key.Equals("page", StringComparison.OrdinalIgnoreCase))
            {
                hasPage = true;
                return "page=" + pageNumber;
            }
            return x.Key + "=" + x.Value;
        }).ToList();

        if (!hasPage)
        {
            queryParams.Add("page=" + pageNumber);
        }

        return request.Path + "?" + string.Join("&", queryParams);
    }
}